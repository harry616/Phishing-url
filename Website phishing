import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
%matplotlib inline
import sklearn
from sklearn.preprocessing import scale

import math
lung_data=pd.read_csv("Website Phishing.csv")#import all,and the dataset file
lung_data.head(20)#show first 20 rows



lung_data.corr



from sklearn.model_selection import train_test_split
feature_columns=['SFH','popUpWidnow','SSLfinal_State','Request_URL','URL_of_Anchor','web_traffic','URL_Length','age_of_domain','having_IP_Address','Result']
predicted_class=['Result']#separating parts for testing and training



x=lung_data[feature_columns].values
y=lung_data[predicted_class].values
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.85,random_state=1)
#allocating 85% to training and the rest to testing



from sklearn.preprocessing import Imputer
fill_values =Imputer(missing_values=0,strategy='mean',axis=0)
x_train=fill_values.fit_transform(x_train)
x_test=fill_values.fit_transform(x_test)


from sklearn.ensemble import RandomForestClassifier
random_forest_model = RandomForestClassifier(random_state=1)
random_forest_model.fit(x_train,y_train.ravel())
#Applying the Algorithm



#Predict
predict_train_data = random_forest_model.predict(x_test)
from sklearn import metrics
print("ACCURACY={0:.3f}".format (metrics.accuracy_score(y_test,predict_train_data)))



from sklearn.linear_model import LogisticRegression
#to implement logistic regression



logmodel=LogisticRegression()


logmodel.fit(x_train,y_train)


predictions=logmodel.predict(x_test)


from sklearn.metrics import classification_report


classification_report(y_test,predictions)


from sklearn.metrics import confusion_matrix


confusion_matrix(y_test,predictions)


from sklearn.metrics import accuracy_score


accuracy_score(y_test,predictions)




